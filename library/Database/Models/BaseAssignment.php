<?php

/**
 * BaseAssignment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $asg_id
 * @property integer $asg_wrk
 * @property integer $asg_prj
 * @property integer $asg_pozice
 * @property integer $asg_state
 * @property string $asg_pracpom
 * @property float $asg_uvazek
 * @property float $asg_dalsiuvaz
 * @property float $asg_dalsicin
 * @property Projects $Projects
 * @property Position $Position
 * @property Workers $Workers
 * @property Doctrine_Collection $Timesheets
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAssignment extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('assignment');
        $this->hasColumn('asg_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('asg_wrk', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('asg_prj', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('asg_pozice', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('asg_state', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('asg_pracpom', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('asg_uvazek', 'float', null, array(
             'type' => 'float',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('asg_dalsiuvaz', 'float', null, array(
             'type' => 'float',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('asg_dalsicin', 'float', null, array(
             'type' => 'float',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Projects', array(
             'local' => 'asg_prj',
             'foreign' => 'prj_id'));

        $this->hasOne('Position', array(
             'local' => 'asg_pozice',
             'foreign' => 'pst_id'));

        $this->hasOne('Workers', array(
             'local' => 'asg_wrk',
             'foreign' => 'wrk_id'));

        $this->hasMany('Timesheets', array(
             'local' => 'asg_id',
             'foreign' => 'tms_asg'));
    }
}